{
  "name": "boreal",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "module_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "top_level_declarations"
        }
      ]
    },
    "module_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "module"
        },
        {
          "type": "SYMBOL",
          "name": "module_name"
        },
        {
          "type": "STRING",
          "value": "where"
        }
      ]
    },
    "module_name": {
      "type": "PATTERN",
      "value": "[A-Za-z]+"
    },
    "top_level_declarations": {
      "type": "REPEAT1",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "function_declaration"
          }
        ]
      }
    },
    "function_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "head",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "identifier"
            }
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "function_body"
          }
        }
      ]
    },
    "function_body": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "let_binding"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "PREC_RIGHT",
          "value": 2,
          "content": {
            "type": "SYMBOL",
            "name": "case_expression"
          }
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "binary_operation"
        }
      ]
    },
    "let_binding": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "FIELD",
          "name": "binding_name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "binding_value",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "FIELD",
          "name": "binding_body",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        }
      ]
    },
    "case_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "case"
        },
        {
          "type": "FIELD",
          "name": "conditional",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": "of"
        },
        {
          "type": "FIELD",
          "name": "alternatives",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "alternatives"
            }
          }
        }
      ]
    },
    "alternatives": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "pattern",
          "content": {
            "type": "SYMBOL",
            "name": "pattern"
          }
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "FIELD",
          "name": "rhs",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "let_binding"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "PREC_RIGHT",
                "value": 2,
                "content": {
                  "type": "SYMBOL",
                  "name": "case_expression"
                }
              }
            ]
          }
        }
      ]
    },
    "node": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "binary_operation"
        }
      ]
    },
    "pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "constructor"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-z_\\d]+"
    },
    "constructor": {
      "type": "PATTERN",
      "value": "[A-Z][A-Za-z0-9]+"
    },
    "binary_operation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "STRING",
                "value": "+"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "STRING",
                "value": "-"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 3,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "STRING",
                "value": "*"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "STRING",
                "value": "/"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

